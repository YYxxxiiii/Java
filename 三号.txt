/*多景点间求最佳路径*/
void BestPath(mgraphtype *g) {
	int vNum[M] = { 0 }, j = 1;                                       /*记录用户输入的编号信息*/
	int d = 0;                                                        /*统计全程总长*/
	printf("\n请输入你要游览的第%d个景点的编号（输入-1结束输入）：", j);
	scanf("%d", &vNum[j - 1]);
	while (vNum[j - 1] != -1 && j < 12) {
		while (Judge_Input(vNum[j - 1])) {
			printf("\n请输入你要游览的第%d个景点编号：", j);
			scanf("%d", &vNum[j - 1]);
		}
		if (vNum[j - 1] == -1) break;
		printf("\n请输入你要游览的第%d个景点编号：", ++j);
		scanf("%d", &vNum[j - 1]);
	}
	printf("\n这是最佳访问路径：");
	for (int i = 0; vNum[i] > 0 && vNum[i + 1] > 0; i++) {
		printf("%s->", g->vexs[vNum[i] - 1].name);                   /*输出路径上的起点*/
		Floyd_Print(g, vNum[i] - 1, vNum[i + 1] - 1);                /*利用Floyd算法*/
		d += dist[vNum[i] - 1][vNum[i + 1] - 1];
	}
	printf("%s\n\n", g->vexs[vNum[j - 2] - 1].name);                 /*输出路径上的终点*/
}

/*主菜单*/
int menu() {
	int s;
	printf("\t\t              ┌─────────────────────────────────────┐                \n");
	printf("\t\t┌────────────├──欢迎使用西安科技大学校园导游咨询系统─┤────────────────┐\n");
	printf("\t\t│             └─────────────────────────────────────┘                 │\n");
	printf("\t\t│                                                                     │\n");
	printf("\t\t│                                                                     │\n");
	printf("\t\t│   ┌────────────────────────┐        ┌────────────────────────┐      │\n");
	printf("\t\t│   │ 1.科大校园景点信息查询 │        │ 2.两景点间最短路径查询 │      │\n");
	printf("\t\t│   └────────────────────────┘        └────────────────────────┘      │\n");
	printf("\t\t│                                                                     │\n");
	printf("\t\t│   ┌────────────────────────┐        ┌──────────┐                    │\n");
	printf("\t\t│   │ 3.多景点间访问路线查询 │        │ 4.公告栏 │                    │ \n");
	printf("\t\t│   └────────────────────────┘        └──────────┘                    │\n");
	printf("\t\t│                                                                     │\n");
	printf("\t\t│                    ┌────────────────────────┐                       │\n");
	printf("\t\t│                    │ 5.退出校园导游咨询系统 │                       │\n");
	printf("\t\t│                    └────────────────────────┘                       │\n");
	printf("\t\t│                                                                     │\n");
	printf("\t\t└─────────────────────────────────────────────────────────────────────┘\n\n");
	printf("\t\t请根据你的需求选择操作：");
	scanf_s("%d", &s);
	printf("\n\n");
	return s;
}
/*判断输入的编号是否合理*/
int Judge_Input(int num)
{
	int i = 0;
	if (num == -1)
		return i;
	if (num < 1 || num>12)
	{
		printf("\n输入的编号有误，请输入1-12之间的数字！\n");
		i = 1;
	}
	else if (Scenic_Manager[num].close == INFINITY)
	{
		printf("\n该景点暂时关闭，无法游览。\n");
		printf("\n");
		printf("关闭原因: %s\n", Scenic_Manager[num].reason);
		i = 1;
	}

	return i;
}

/*管理员界面*/
void Manager()
{
	int n, num, no, i;
	mgraphtype *g;
	int quit = 0;
	FILE * rf;
	rf = fopen("Information.txt", "r");
	char info[200];
	printf("\t\t               ┌────────┐         ┌────────┐               \n");
	printf("\t\t               1.发布公告         2.景点管理               \n");
	printf("\t\t               └────────┘         └────────┘               \n");
	printf("请输入要选择的编号:\n");
	scanf("%d", &n);
	switch (n)
	{
	case 1:
		if (rf)
		{
			printf("输入要发布的公告信息数目: ");
			scanf("%d", &no);
			printf("\n");
			for (i = 1; i <= no; i++)
			{
				printf("请输入第%d条公告信息编号: ", i);
				scanf("%d", &num);
				printf("\n");
				printf("请输入第%d条公告信息内容: ", i);
				scanf("%s", info);
				printf("\n");
				fprintf(rf, "%d\n%s\n", num, info);
				printf("公告发布成功!\n\n");
				printf("\n");
			}
		}
		fclose(rf);
		Manager();
		break;
	case 2:
		ScenicManager(&g);
		break;
	case -1:
		break;
	default:
		printf("\t\t\t\t\t错误！没有该选项对应的操作。\n\n");
		break;
	}
}
/*西安科技大学校园导游咨询系统登录系统*/
int Login_System()
{
	int num = 0;
	printf("\t\t                      ┌────────────────────────────────────────┐                      \n");
	printf("\t\t                     ├── 欢迎使用西安科技大学校园导游咨询系统 ──┤                     \n");
	printf("\t\t                      └────────────────────────────────────────┘                      \n");
	printf("\t\t                                       请登录                                       \n");
	printf("\t\t                ┌───────────────┐                 ┌───────────────┐               \n");
	printf("\t\t                │  1.管理员登录 │                 │  2.用户登录   │               \n");
	printf("\t\t                └───────────────┘                 └───────────────┘               \n");
	printf("请输入要选择的编号:\n");
	scanf("%d", &num);
	switch (num)
	{
	case 1:
		system("cls"); Login(); Manager(); break;
	case 2:
		system("cls"); Login(); break;
	default:
		printf("\t\t\t\t\t错误！没有该选项对应的操作。\n\n");
		break;
	}
	return 1;
}
/*退出菜单栏*/
void System_Exit(int *quit) {
	*quit = 1;
	printf("\t\t                ┌───────────────────┐                \n");
	printf("\t\t              ├── 欢迎下次使用，谢谢 ──┤              \n");
	printf("\t\t                └───────────────────┘                \n");
	printf("\t\t            *       *       *       *      * * *      * * * *              \n");
	printf("\t\t              *   *         *       *     *              *                 \n");
	printf("\t\t                *           *       *      * * *         *                 \n");
	printf("\t\t              *   *         *       *           *        *                 \n");
	printf("\t\t            *       *         * * *        * * *         *                 \n");
}